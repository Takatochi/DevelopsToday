name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.23'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Install swag for Swagger generation
      run: go install github.com/swaggo/swag/cmd/swag@latest

    - name: Generate Swagger docs
      run: swag init -g internal/controller/http/controller.go -o docs

    - name: Run tests
      env:
        PG_URL: postgres://spy_cats:secret_password@localhost:5432/spy_cats?sslmode=disable
        APP_NAME: spy-cats-api
        APP_VERSION: release
        HTTP_PORT: 8080
        LOG_LEVEL: info
        SWAGGER_ENABLED: true
        JWT_SECRET: release-secret-key-for-tests-at-least-32-characters
        JWT_ACCESS_TOKEN_TTL: 900
        JWT_REFRESH_TOKEN_TTL: 604800
        JWT_SIGNING_ALGORITHM: HS256
        CACHE_TYPE: memory
      run: go test -v ./...

    - name: Build binaries
      run: |
        mkdir -p bin

        # Get version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        COMMIT_SHA=${GITHUB_SHA::8}

        LDFLAGS="-s -w -X main.Version=$VERSION -X main.BuildTime=$BUILD_TIME -X main.CommitSHA=$COMMIT_SHA"

        # Linux
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/spy-cats-api-linux-amd64 cmd/main.go
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="$LDFLAGS" -o bin/spy-cats-api-linux-arm64 cmd/main.go

        # Windows
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/spy-cats-api-windows-amd64.exe cmd/main.go

        # macOS
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/spy-cats-api-darwin-amd64 cmd/main.go
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="$LDFLAGS" -o bin/spy-cats-api-darwin-arm64 cmd/main.go

    - name: Create checksums
      run: |
        cd bin
        sha256sum * > checksums.txt

    - name: Generate changelog
      id: changelog
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # Get commits since last tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s")
        fi
        
        # Create release notes
        cat > release_notes.md << EOF
        ## What's Changed
        
        $CHANGELOG
        
        ## Installation

        ### Download Binary
        Download the appropriate binary for your platform from the assets below.

        ### Docker
        \`\`\`bash
        docker pull ghcr.io/${{ github.repository }}:$TAG_NAME
        \`\`\`

        ### Docker Compose (Quick Start)
        \`\`\`bash
        git clone https://github.com/${{ github.repository }}.git
        cd DevelopsToday
        git checkout $TAG_NAME
        make quick-lite  # Start API + DB + Redis
        \`\`\`

        ### Go Install
        \`\`\`bash
        go install github.com/${{ github.repository }}/cmd@$TAG_NAME
        \`\`\`
        
        ## Verification
        Verify the downloaded binary using the provided checksums:
        \`\`\`bash
        sha256sum -c checksums.txt
        \`\`\`
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_notes.md
        files: |
          bin/*
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-release:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install swag for Swagger generation
      run: |
        go install github.com/swaggo/swag/cmd/swag@latest
        export PATH=$PATH:$(go env GOPATH)/bin
        swag init -g internal/controller/http/controller.go -o docs

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
